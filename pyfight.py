# -*- coding: utf-8 -*-
"""Pyfight.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ypuV6wHZWridx1pjzPjcwhIR8TAkqnmi
"""

import random
# Definimos la función de bienvenida que muestra la dinamica del juego
def mostrar_bienvenida():
    print("¡Bienvenido a pyfight!") # Nombre de nuestro juego por definir aún XD
    print("En este juego, dos personajes se enfrentarán en una batalla por turnos.")
    print("Cada personaje tendrá estadísticas de ataque y defensa generadas aleatoriamente.")
    print("cada personaje podrá decidir si desea atacar o no segun su estrategia")
    print("El juego terminará cuando uno de los personajes pierda toda su defensa.\n")

#Definimos la función para preguntar al usuario por los nombres de los jugadores
def obtener_nombres():
    nombre1 = input("Ingresa el nombre del primer personaje: ")
    nombre2 = input("Ingresa el nombre del segundo personaje: ")
    return nombre1, nombre2

#Definimos la función para generar estadísticas aleatorias de ataque y defensa
def generar_estadisticas():
    ataque = random.randint(10, 2000)
    defensa = random.randint(10, 2000)
    return ataque, defensa
#El return en este caso se pone ya que sino más adelante la función daría como resultado none

#Definimos la función para mostrar estadísticas
def mostrar_estadisticas(nombre, ataque, defensa):
    print(f"\nPersonaje: {nombre}")
    print(f"Ataque: {ataque}")
    print(f"Defensa: {defensa}")

#definimos la función para el combate con dos parametros que recibe, los jugadores tomarán los roles de atacante y defensor
def turno_combate(atacante, defensor):
    desicion= input(f"{defensor['nombre']} es vulnerable, deseas atacar? s/n")
    if desicion == "s":
      print(f"\n{atacante['nombre']} ataca a {defensor['nombre']}!")
      defensor['defensa'] -= atacante['ataque']
      if defensor['defensa'] < 0:
          defensor['defensa'] = 0
          print(f"{defensor['nombre']} ahora tiene {defensor['defensa']} de defensa.")
      else:
        print(f"{defensor['nombre']} ahora tiene {defensor['defensa']} de defensa.")
        print(f"\n¡es turno de {defensor['nombre']}!\n")
    else:
      desicion=="n"
      print(f"\n¡{atacante['nombre']} decidió no atacar y ahora es vulnerable!\n")
      print(f"\n¡es turno de {defensor['nombre']}!\n")



#Definimos la función para que comienze el juego
def jugar():
    mostrar_bienvenida()

    # Obtener nombres de los personajes
    nombre1, nombre2 = obtener_nombres()

    # Generar estadísticas para los personajes
    ataque1, defensa1 = generar_estadisticas()
    ataque2, defensa2 = generar_estadisticas()

    # Crear diccionarios para los personajes
    personaje1 = {'nombre': nombre1, 'ataque': ataque1, 'defensa': defensa1}
    personaje2 = {'nombre': nombre2, 'ataque': ataque2, 'defensa': defensa2}

    # Mostrar estadísticas de los personajes
    mostrar_estadisticas(personaje1['nombre'], personaje1['ataque'], personaje1['defensa'])
    mostrar_estadisticas(personaje2['nombre'], personaje2['ataque'], personaje2['defensa'])

    # Decidir quién empieza atacando
    turno = random.choice([personaje1, personaje2])
    print(f"\n¡{turno['nombre']} comienza atacando!\n")

    # Iniciar el combate
    while personaje1['defensa'] > 0 and personaje2['defensa'] > 0:
        if turno == personaje1:
            turno_combate(personaje1, personaje2)
            #El personaje1 ataca
            turno = personaje2  # Cambiar turno
        else:
            turno_combate(personaje2, personaje1)
            #Sino el personaje 2 es el que ataca
            turno = personaje1  # Cambiar turno

    # Declarar el ganador
    if personaje1['defensa'] == 0:
        print(f"\n{personaje2['nombre']} ha ganado el combate!")
    else:
        print(f"\n{personaje1['nombre']} ha ganado el combate!")

# Ejecutar el juego
jugar()